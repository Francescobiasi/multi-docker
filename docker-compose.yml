#andremo a configurare tutti i servizi necessari per l applicazione
version: '3'
services:

  postgres:
    image: postgres:11-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres_password

  redis:
    image: 'redis:latest'

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev #non specifichiamo la cartella ma solo il nome del
      context: ./nginx #va a prendere il dockerfile all interno 
    
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev #non specifichiamo la cartella ma solo il nome del
      context: ./server #va a prendere il dockerfile all interno 
    volumes:
      - /app/node_modules #lascia la cartella cosi com'è
      - ./server:/app #il container utilizzerà la nostra app in locale tranne i node modules

    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432

  client:
    stdin_open: true
    build: 
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules #lascia la cartella cosi com'è
      - ./client:/app

    environment:
      - WDS_SOCKET_PORT=0

  worker:
    build: 
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules #lascia la cartella cosi com'è
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379